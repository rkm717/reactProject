{"version":3,"sources":["logo.svg","components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","about","class","onClick","toggleMode","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","rows","newText","toUpperCase","toLowerCase","split","length","Alert","alert","role","msg","App","setmode","setalert","showAlert","message","document","body","backgroundColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.00002a43.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\r\n\r\nimport PropTypes from 'prop-types'\r\n/* import { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\"; */\r\nexport default function Navbar(props) {\r\n    return (\r\n  \r\n  <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n  <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span className=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n\r\n  <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n    <ul className=\"navbar-nav mr-auto\">\r\n      <li className=\"nav-item active\">\r\n        <a className=\"nav-link\" href=\"/\">Home </a>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <a className=\"nav-link\" href=\"/about\">{props.about}</a>\r\n      </li>\r\n     </ul>\r\n     <label class=\"switch\">\r\n      <input type=\"checkbox\" onClick={props.toggleMode} />\r\n      <span class=\"slider round\"></span>\r\n    </label>\r\n   </div>\r\n  </nav>\r\n\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string,\r\n    about: PropTypes.string\r\n};","import React,{useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const [text, setText] = useState('Enter text here');\r\n\r\n    const btnupclick = ()=> {\r\n      //console.log(\"Uppercase was clicked\",+ text);\r\n      let newText = text.toUpperCase();\r\n      setText(newText);\r\n    }\r\n\r\n    const btnloclick = ()=> {\r\n      //console.log(\"Uppercase was clicked\",+ text);\r\n      let newText = text.toLowerCase();\r\n      setText(newText);\r\n    }\r\n\r\n    const btnclearclick = ()=> {\r\n      let newText = '';\r\n      setText(newText);\r\n    }\r\n\r\n  const handleOnhange = (event)=> {\r\n     // console.log(\"Change to Uppercase\");\r\n      setText(event.target.value);\r\n  }\r\n\r\n    return (\r\n      <>\r\n      <div className=\"container my-2\" style={{color: props.mode ==='dark'?'black':'white'}}>\r\n\r\n        <div className=\"mb-3\">\r\n        <h2>{props.heading}  </h2>\r\n        <textarea className=\"form-control\" value={text} onChange={handleOnhange}  id=\"myBox\" rows=\"8\"></textarea>\r\n\r\n        <button className=\"btn btn-primary mx-2\" onClick={btnupclick} >Convert to UpperCase</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={btnloclick} >Convert to Lowercase</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={btnclearclick} >Clear Text</button>\r\n        </div>\r\n        </div>\r\n\r\n        <div className=\"container my-2\" style={{color: props.mode ==='dark'?'black':'white'}}>\r\n          <h3>Your Text Summary</h3>\r\n          <p>{text.split(\" \").length} Word and {text.length} Charactors </p>\r\n\r\n          <h3>Privew</h3>\r\n          <p>{text}</p>\r\n        </div>\r\n      </>  \r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    return (\r\n        props.alert && <div className=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\r\n           <strong>{props.alert.type}</strong>:{props.alert.msg}\r\n            <button type=\"button\" className=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n/* import About from './About'; */\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n/* import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Routes\n} from \"react-router-dom\"; */\n\n\n\nfunction App() {\n  const [mode, setmode] = useState('light'); //WhetherDark Mode Enable or Not\nconst [alert, setalert] = useState(null)\n\nconst showAlert = (message, type)=>{\n       setalert ({\n         msg: message,\n         type: type\n       })\n}\n\n\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n      setmode('dark');\n      document.body.style.backgroundColor ='#11648bbf';\n      showAlert(\"Dark Mode has been Enable\",\"Success\");\n\n    } else {\n      setmode('light');\n      document.body.style.backgroundColor ='#0b0a0ab5';\n      showAlert(\"Light Mode has been Enable\",\"Success\");\n    }\n  }\n  return (\n    <>\n  {/* <Router> */}\n   <Navbar title =\"MyReactClass\" about=\"About Us\" mode={mode} toggleMode={toggleMode} />\n   <Alert alert={alert} />\n {   <div className='container my-3'>\n    <TextForm heading=\"Enter the Text Field\"/>\n   </div> }\n   {/* <div className='container my-3'>\n   <Routes>\n    <Route path=\"/about\" element={ <About />} />\n    <Route path=\"/\" element={ <TextForm />} />\n  </Routes>\n   \n    </div> \n    \n    </Router> */}\n   \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}